# Generated by Django 5.2.7 on 2025-10-15 08:48

import django.core.validators
import django.db.models.deletion
from decimal import Decimal
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Counter',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(db_index=True, help_text="Name of the counter (e.g., 'Veg Counter')", max_length=100, unique=True)),
                ('description', models.TextField(blank=True, help_text="Optional description of the counter's specialty", null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
            ],
            options={
                'ordering': ['name'],
                'indexes': [models.Index(fields=['name'], name='menu_counte_name_d9bdd5_idx'), models.Index(fields=['created_at'], name='menu_counte_created_39e82f_idx')],
            },
        ),
        migrations.CreateModel(
            name='FoodItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(db_index=True, help_text='Name of the food item', max_length=100)),
                ('description', models.TextField(help_text='Detailed description of the food item and ingredients')),
                ('price', models.DecimalField(db_index=True, decimal_places=2, help_text='Price in currency units', max_digits=8, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))])),
                ('image', models.ImageField(blank=True, help_text='Upload an image of the food item', null=True, upload_to='food_images/')),
                ('image_url', models.URLField(blank=True, help_text='External image URL (alternative to uploaded image)', null=True)),
                ('stock', models.PositiveIntegerField(db_index=True, default=0, help_text='Available quantity in stock', validators=[django.core.validators.MaxValueValidator(9999)])),
                ('is_available', models.BooleanField(db_index=True, default=True, help_text='Whether the item is available for ordering')),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated_at', models.DateTimeField(auto_now=True, db_index=True)),
                ('counter', models.ForeignKey(help_text='The counter this item belongs to', on_delete=django.db.models.deletion.CASCADE, related_name='food_items', to='menu.counter')),
            ],
            options={
                'ordering': ['-created_at'],
                'indexes': [models.Index(fields=['name', 'counter'], name='menu_foodit_name_d37619_idx'), models.Index(fields=['is_available', 'created_at'], name='menu_foodit_is_avai_47a597_idx'), models.Index(fields=['counter', 'is_available'], name='menu_foodit_counter_13d71f_idx'), models.Index(fields=['price', 'is_available'], name='menu_foodit_price_4da08d_idx'), models.Index(fields=['created_at'], name='menu_foodit_created_a95595_idx'), models.Index(fields=['updated_at'], name='menu_foodit_updated_d50409_idx')],
                'unique_together': {('counter', 'name')},
            },
        ),
    ]
