# Generated by Django 5.2.7 on 2025-10-17 03:48

import django.core.validators
import django.db.models.deletion
import uuid
from decimal import Decimal
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('orders', '0007_order_paid_amount_order_payment_processed_at_and_more'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='PaymentMethod',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Display name of payment method', max_length=100)),
                ('payment_type', models.CharField(choices=[('wallet', 'Digital Wallet'), ('upi', 'UPI Payment'), ('card', 'Credit/Debit Card'), ('net_banking', 'Net Banking'), ('cash', 'Cash Payment'), ('campus_card', 'Campus ID Card')], db_index=True, max_length=20)),
                ('description', models.TextField(blank=True, help_text='Description of payment method')),
                ('is_enabled', models.BooleanField(db_index=True, default=True)),
                ('status', models.CharField(choices=[('active', 'Active'), ('inactive', 'Inactive'), ('maintenance', 'Under Maintenance')], db_index=True, default='active', max_length=20)),
                ('min_amount', models.DecimalField(decimal_places=2, default=Decimal('1.00'), max_digits=10)),
                ('max_amount', models.DecimalField(decimal_places=2, default=Decimal('10000.00'), max_digits=10)),
                ('gateway_config', models.JSONField(blank=True, default=dict, help_text='Payment gateway specific configuration')),
                ('transaction_fee_percentage', models.DecimalField(decimal_places=2, default=Decimal('0.00'), help_text='Transaction fee as percentage', max_digits=5)),
                ('transaction_fee_flat', models.DecimalField(decimal_places=2, default=Decimal('0.00'), help_text='Flat transaction fee', max_digits=8)),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['name'],
                'indexes': [models.Index(fields=['payment_type', 'is_enabled'], name='payments_pa_payment_e5c7ba_idx'), models.Index(fields=['status', 'is_enabled'], name='payments_pa_status_d28dda_idx')],
            },
        ),
        migrations.CreateModel(
            name='Wallet',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('balance', models.DecimalField(decimal_places=2, default=Decimal('0.00'), help_text='Current wallet balance', max_digits=12, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('status', models.CharField(choices=[('active', 'Active'), ('frozen', 'Frozen'), ('suspended', 'Suspended'), ('closed', 'Closed')], db_index=True, default='active', max_length=20)),
                ('daily_spend_limit', models.DecimalField(decimal_places=2, default=Decimal('1000.00'), help_text='Daily spending limit', max_digits=10)),
                ('monthly_spend_limit', models.DecimalField(decimal_places=2, default=Decimal('10000.00'), help_text='Monthly spending limit', max_digits=12)),
                ('total_credited', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=15)),
                ('total_debited', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=15)),
                ('last_transaction_at', models.DateTimeField(blank=True, db_index=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='wallet', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Transaction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('transaction_id', models.UUIDField(db_index=True, default=uuid.uuid4, unique=True)),
                ('transaction_type', models.CharField(choices=[('credit', 'Credit'), ('debit', 'Debit'), ('refund', 'Refund'), ('fee', 'Fee'), ('bonus', 'Bonus'), ('penalty', 'Penalty')], db_index=True, max_length=20)),
                ('amount', models.DecimalField(decimal_places=2, max_digits=12, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))])),
                ('description', models.TextField(help_text='Transaction description')),
                ('reference_id', models.CharField(blank=True, db_index=True, help_text='External reference ID', max_length=255)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('processing', 'Processing'), ('completed', 'Completed'), ('failed', 'Failed'), ('cancelled', 'Cancelled'), ('refunded', 'Refunded')], db_index=True, default='pending', max_length=20)),
                ('gateway_response', models.JSONField(blank=True, default=dict, help_text='Payment gateway response')),
                ('balance_before', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True)),
                ('balance_after', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('processed_at', models.DateTimeField(blank=True, db_index=True, null=True)),
                ('order', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='payment_transactions', to='orders.order')),
                ('payment_method', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='payments.paymentmethod')),
                ('refund_for', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='refunds', to='payments.transaction')),
                ('wallet', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='transactions', to='payments.wallet')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='PaymentRequest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('request_id', models.UUIDField(db_index=True, default=uuid.uuid4, unique=True)),
                ('amount', models.DecimalField(decimal_places=2, max_digits=12)),
                ('fee_amount', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=8)),
                ('total_amount', models.DecimalField(decimal_places=2, max_digits=12)),
                ('purpose', models.CharField(help_text='Purpose of payment', max_length=255)),
                ('description', models.TextField(blank=True)),
                ('gateway_request_id', models.CharField(blank=True, db_index=True, max_length=255)),
                ('gateway_payment_url', models.URLField(blank=True)),
                ('gateway_response', models.JSONField(blank=True, default=dict)),
                ('status', models.CharField(choices=[('initiated', 'Initiated'), ('pending', 'Pending'), ('processing', 'Processing'), ('completed', 'Completed'), ('failed', 'Failed'), ('expired', 'Expired'), ('cancelled', 'Cancelled')], db_index=True, default='initiated', max_length=20)),
                ('expires_at', models.DateTimeField(db_index=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('payment_method', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='payments.paymentmethod')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='payment_requests', to=settings.AUTH_USER_MODEL)),
                ('transaction', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='payment_request', to='payments.transaction')),
            ],
            options={
                'ordering': ['-created_at'],
                'indexes': [models.Index(fields=['status', 'expires_at'], name='payments_pa_status_ba8402_idx'), models.Index(fields=['user', 'status'], name='payments_pa_user_id_9f70d2_idx'), models.Index(fields=['gateway_request_id'], name='payments_pa_gateway_98b40c_idx')],
            },
        ),
        migrations.AddIndex(
            model_name='wallet',
            index=models.Index(fields=['status', 'balance'], name='payments_wa_status_3b0146_idx'),
        ),
        migrations.AddIndex(
            model_name='wallet',
            index=models.Index(fields=['user', 'status'], name='payments_wa_user_id_ced3dc_idx'),
        ),
        migrations.AddIndex(
            model_name='transaction',
            index=models.Index(fields=['wallet', 'transaction_type', 'status'], name='payments_tr_wallet__f9bfa4_idx'),
        ),
        migrations.AddIndex(
            model_name='transaction',
            index=models.Index(fields=['created_at', 'status'], name='payments_tr_created_57441b_idx'),
        ),
        migrations.AddIndex(
            model_name='transaction',
            index=models.Index(fields=['reference_id', 'status'], name='payments_tr_referen_43bcfa_idx'),
        ),
        migrations.AddIndex(
            model_name='transaction',
            index=models.Index(fields=['transaction_id'], name='payments_tr_transac_e96a4f_idx'),
        ),
    ]
